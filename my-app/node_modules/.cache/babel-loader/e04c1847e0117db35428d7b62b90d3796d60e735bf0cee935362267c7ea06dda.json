{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhave\\\\Desktop\\\\DBMS\\\\DBMS Project\\\\my-app\\\\src\\\\StudentView.js\",\n  _s = $RefreshSig$();\n// // src/StudentView.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function StudentView() {\n//     const [data, setData] = useState(null);\n\n//     useEffect(() => {\n//         async function fetchData() {\n//             const response = await axios.get('http://localhost:5000/student');\n//             setData(response.data);\n//         }\n//         fetchData();\n//     }, []);\n\n//     if (!data) return <div>Loading...</div>;\n\n//     return (\n//         <div>\n//             <h2>Student Data</h2>\n//             <h3>Students</h3>\n//             <ul>\n//                 {data.students.map((student) => (\n//                     <li key={student.SRN}>{student.Name} - {student.Email} - GPA: {student.GPA}</li>\n//                 ))}\n//             </ul>\n\n//             <h3>Marksheet</h3>\n//             <ul>\n//                 {data.marksheets.map((mark) => (\n//                     <li key={mark.SRN}>{mark.SRN} - Total: {mark.Total}</li>\n//                 ))}\n//             </ul>\n\n//             <h3>Teams</h3>\n//             <ul>\n//                 {data.teams.map((team) => (\n//                     <li key={team.T_id}>{team.Project_Title}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default StudentView;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentView() {\n  _s();\n  const [srn, setSrn] = useState(''); // State for storing the SRN input\n  const [data, setData] = useState(null); // State for storing fetched data\n  const [loading, setLoading] = useState(false); // State to track loading status\n\n  // Fetch data from the server using the provided SRN\n  const fetchData = async srn => {\n    if (!srn) {\n      alert(\"Please enter a valid SRN.\");\n      return;\n    }\n    setLoading(true); // Set loading to true while fetching data\n\n    try {\n      // Make the GET request to the Flask backend with the SRN\n      const response = await axios.get(`http://localhost:5000/student?srn=${srn}`);\n      setData(response.data); // Store the response data\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setData(null); // Reset data if there's an error\n    } finally {\n      setLoading(false); // Set loading to false after data is fetched\n    }\n  };\n\n  // Event handler for fetching data when the button is clicked\n  const handleFetchClick = () => {\n    fetchData(srn);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Student SRN:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: srn,\n          onChange: e => setSrn(e.target.value) // Update SRN value on change\n          ,\n          placeholder: \"Enter SRN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchClick,\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Student Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SRN:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 28\n          }, this), \" \", data.student.SRN]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 28\n          }, this), \" \", data.student.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 28\n          }, this), \" \", data.student.Email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 28\n          }, this), \" \", data.student.Phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"GPA:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 28\n          }, this), \" \", data.student.GPA]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Marksheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), data.marksheets.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.marksheets.map(mark => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"SRN: \", mark.SRN, \", Total: \", mark.Total, \", Assessment: \", mark.Assessment_Number]\n        }, `${mark.SRN}-${mark.G_id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No marksheet data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), data.teams.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Project Title: \", team.Project_Title, \" (Team ID: \", team.T_id, \")\"]\n        }, team.T_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No team data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found for the provided SRN.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(StudentView, \"0LaihETMA9a3O1pPiJwZ72X2SfQ=\");\n_c = StudentView;\nexport default StudentView;\nvar _c;\n$RefreshReg$(_c, \"StudentView\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentView","_s","srn","setSrn","data","setData","loading","setLoading","fetchData","alert","response","get","error","console","handleFetchClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","student","SRN","Name","Email","Phone","GPA","marksheets","length","map","mark","Total","Assessment_Number","G_id","teams","team","Project_Title","T_id","_c","$RefreshReg$"],"sources":["C:/Users/bhave/Desktop/DBMS/DBMS Project/my-app/src/StudentView.js"],"sourcesContent":["// // src/StudentView.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function StudentView() {\r\n//     const [data, setData] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         async function fetchData() {\r\n//             const response = await axios.get('http://localhost:5000/student');\r\n//             setData(response.data);\r\n//         }\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     if (!data) return <div>Loading...</div>;\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Student Data</h2>\r\n//             <h3>Students</h3>\r\n//             <ul>\r\n//                 {data.students.map((student) => (\r\n//                     <li key={student.SRN}>{student.Name} - {student.Email} - GPA: {student.GPA}</li>\r\n//                 ))}\r\n//             </ul>\r\n\r\n//             <h3>Marksheet</h3>\r\n//             <ul>\r\n//                 {data.marksheets.map((mark) => (\r\n//                     <li key={mark.SRN}>{mark.SRN} - Total: {mark.Total}</li>\r\n//                 ))}\r\n//             </ul>\r\n\r\n//             <h3>Teams</h3>\r\n//             <ul>\r\n//                 {data.teams.map((team) => (\r\n//                     <li key={team.T_id}>{team.Project_Title}</li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default StudentView;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction StudentView() {\r\n    const [srn, setSrn] = useState('');  // State for storing the SRN input\r\n    const [data, setData] = useState(null);  // State for storing fetched data\r\n    const [loading, setLoading] = useState(false);  // State to track loading status\r\n\r\n    // Fetch data from the server using the provided SRN\r\n    const fetchData = async (srn) => {\r\n        if (!srn) {\r\n            alert(\"Please enter a valid SRN.\");\r\n            return;\r\n        }\r\n        \r\n        setLoading(true);  // Set loading to true while fetching data\r\n\r\n        try {\r\n            // Make the GET request to the Flask backend with the SRN\r\n            const response = await axios.get(`http://localhost:5000/student?srn=${srn}`);\r\n            setData(response.data);  // Store the response data\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n            setData(null);  // Reset data if there's an error\r\n        } finally {\r\n            setLoading(false);  // Set loading to false after data is fetched\r\n        }\r\n    };\r\n\r\n    // Event handler for fetching data when the button is clicked\r\n    const handleFetchClick = () => {\r\n        fetchData(srn);\r\n    };\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Student Data</h2>\r\n            \r\n            <div>\r\n                <label>\r\n                    Enter Student SRN:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={srn}\r\n                        onChange={(e) => setSrn(e.target.value)}  // Update SRN value on change\r\n                        placeholder=\"Enter SRN\"\r\n                    />\r\n                </label>\r\n                <button onClick={handleFetchClick}>Fetch Data</button>\r\n            </div>\r\n\r\n            {data ? (\r\n                <div>\r\n                    {/* Display student details */}\r\n                    <h3>Student Information</h3>\r\n                    <div>\r\n                        <p><strong>SRN:</strong> {data.student.SRN}</p>\r\n                        <p><strong>Name:</strong> {data.student.Name}</p>\r\n                        <p><strong>Email:</strong> {data.student.Email}</p>\r\n                        <p><strong>Phone:</strong> {data.student.Phone}</p>\r\n                        <p><strong>GPA:</strong> {data.student.GPA}</p>\r\n                    </div>\r\n\r\n                    {/* Display Marksheet data */}\r\n                    <h3>Marksheet</h3>\r\n                    {data.marksheets.length > 0 ? (\r\n                        <ul>\r\n                            {data.marksheets.map((mark) => (\r\n                                <li key={`${mark.SRN}-${mark.G_id}`}>\r\n                                    SRN: {mark.SRN}, Total: {mark.Total}, Assessment: {mark.Assessment_Number}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No marksheet data available.</p>\r\n                    )}\r\n\r\n                    {/* Display Team data */}\r\n                    <h3>Teams</h3>\r\n                    {data.teams.length > 0 ? (\r\n                        <ul>\r\n                            {data.teams.map((team) => (\r\n                                <li key={team.T_id}>\r\n                                    Project Title: {team.Project_Title} (Team ID: {team.T_id})\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No team data available.</p>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div>No data found for the provided SRN.</div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudentView;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}