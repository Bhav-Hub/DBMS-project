{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhave\\\\Desktop\\\\DBMS\\\\DBMS Project\\\\my-app\\\\src\\\\TeacherView.js\",\n  _s = $RefreshSig$();\n// // src/TeacherView.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function TeacherView() {\n//     const [data, setData] = useState(null);\n\n//     useEffect(() => {\n//         async function fetchData() {\n//             try {\n//                 const response = await axios.get('http://localhost:5000/teacher');\n//                 setData(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching teacher data\", error);\n//             }\n//         }\n//         fetchData();\n//     }, []);\n\n//     if (!data) return <div>Loading...</div>;\n\n//     return (\n//         <div>\n//             <h2>Teacher Data</h2>\n\n//             <h3>Guides</h3>\n//             <ul>\n//                 {data.guides.map((guide) => (\n//                     <li key={guide.G_id}>{guide.G_name} (ID: {guide.G_id})</li>\n//                 ))}\n//             </ul>\n\n//             <h3>Marksheet</h3>\n//             <ul>\n//                 {data.marksheets.map((mark) => (\n//                     <li key={`${mark.SRN}-${mark.G_id}`}>\n//                         SRN: {mark.SRN}, Total: {mark.Total}, Assessment: {mark.Assessment_Number}\n//                     </li>\n//                 ))}\n//             </ul>\n\n//             <h3>Panels</h3>\n//             <ul>\n//                 {data.panels.map((panel) => (\n//                     <li key={panel.Panel_Id}>\n//                         Panel {panel.Panel_Id} - Guides: {panel.G_id1}, {panel.G_id2}, {panel.G_id3}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default TeacherView;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TeacherView() {\n  _s();\n  const [srn, setSrn] = useState(\"\"); // State to hold SRN entered by teacher\n  const [data, setData] = useState(null); // State to hold fetched data\n\n  // Function to fetch data for the given SRN\n  const fetchData = async srn => {\n    if (!srn) {\n      alert(\"Please enter a valid SRN.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/teacher?srn=${srn}`);\n      setData(response.data); // Update state with fetched data\n    } catch (error) {\n      console.error(\"Error fetching teacher data:\", error);\n      setData(null); // Clear previous data if there is an error\n    }\n  };\n\n  // This will be called when the teacher clicks \"Fetch Data\"\n  const handleFetchClick = () => {\n    fetchData(srn); // Call fetchData with the entered SRN\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Teacher Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Student SRN:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: srn // Bind input field value to the state\n          ,\n          onChange: e => setSrn(e.target.value) // Update SRN state on input change\n          ,\n          placeholder: \"Enter SRN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchClick,\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Guides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.guides && data.guides.length > 0 ? data.guides.map(guide => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [guide.G_name, \" (ID: \", guide.G_id, \")\"]\n        }, guide.G_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No guide data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Marksheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.marksheets && data.marksheets.length > 0 ? data.marksheets.map(mark => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"SRN: \", mark.SRN, \", Total: \", mark.Total, \", Assessment: \", mark.Assessment_Number]\n        }, `${mark.SRN}-${mark.G_id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No marksheet data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Panels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.panels && data.panels.length > 0 ? data.panels.map(panel => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Panel \", panel.Panel_Id, \" - Guides: \", panel.G_id1, \", \", panel.G_id2, \", \", panel.G_id3]\n        }, panel.Panel_Id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No panel data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found for the provided SRN.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(TeacherView, \"+pCyZiF8kSZc4KZdwRFFvNLtuxE=\");\n_c = TeacherView;\nexport default TeacherView;\nvar _c;\n$RefreshReg$(_c, \"TeacherView\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TeacherView","_s","srn","setSrn","data","setData","fetchData","alert","response","get","error","console","handleFetchClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","guides","length","map","guide","G_name","G_id","marksheets","mark","SRN","Total","Assessment_Number","panels","panel","Panel_Id","G_id1","G_id2","G_id3","_c","$RefreshReg$"],"sources":["C:/Users/bhave/Desktop/DBMS/DBMS Project/my-app/src/TeacherView.js"],"sourcesContent":["// // src/TeacherView.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function TeacherView() {\r\n//     const [data, setData] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         async function fetchData() {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:5000/teacher');\r\n//                 setData(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching teacher data\", error);\r\n//             }\r\n//         }\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     if (!data) return <div>Loading...</div>;\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Teacher Data</h2>\r\n            \r\n//             <h3>Guides</h3>\r\n//             <ul>\r\n//                 {data.guides.map((guide) => (\r\n//                     <li key={guide.G_id}>{guide.G_name} (ID: {guide.G_id})</li>\r\n//                 ))}\r\n//             </ul>\r\n\r\n//             <h3>Marksheet</h3>\r\n//             <ul>\r\n//                 {data.marksheets.map((mark) => (\r\n//                     <li key={`${mark.SRN}-${mark.G_id}`}>\r\n//                         SRN: {mark.SRN}, Total: {mark.Total}, Assessment: {mark.Assessment_Number}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n\r\n//             <h3>Panels</h3>\r\n//             <ul>\r\n//                 {data.panels.map((panel) => (\r\n//                     <li key={panel.Panel_Id}>\r\n//                         Panel {panel.Panel_Id} - Guides: {panel.G_id1}, {panel.G_id2}, {panel.G_id3}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default TeacherView;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction TeacherView() {\r\n    const [srn, setSrn] = useState(\"\");  // State to hold SRN entered by teacher\r\n    const [data, setData] = useState(null);  // State to hold fetched data\r\n\r\n    // Function to fetch data for the given SRN\r\n    const fetchData = async (srn) => {\r\n        if (!srn) {\r\n            alert(\"Please enter a valid SRN.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/teacher?srn=${srn}`);\r\n            setData(response.data);  // Update state with fetched data\r\n        } catch (error) {\r\n            console.error(\"Error fetching teacher data:\", error);\r\n            setData(null);  // Clear previous data if there is an error\r\n        }\r\n    };\r\n\r\n    // This will be called when the teacher clicks \"Fetch Data\"\r\n    const handleFetchClick = () => {\r\n        fetchData(srn);  // Call fetchData with the entered SRN\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Teacher Data</h2>\r\n\r\n            <div>\r\n                <label>\r\n                    Enter Student SRN:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={srn}  // Bind input field value to the state\r\n                        onChange={(e) => setSrn(e.target.value)}  // Update SRN state on input change\r\n                        placeholder=\"Enter SRN\"\r\n                    />\r\n                </label>\r\n                <button onClick={handleFetchClick}>Fetch Data</button>  {/* On button click, fetch data */}\r\n            </div>\r\n\r\n            {data ? (\r\n                <div>\r\n                    <h3>Guides</h3>\r\n                    <ul>\r\n                        {data.guides && data.guides.length > 0 ? (\r\n                            data.guides.map((guide) => (\r\n                                <li key={guide.G_id}>\r\n                                    {guide.G_name} (ID: {guide.G_id})\r\n                                </li>\r\n                            ))\r\n                        ) : (\r\n                            <p>No guide data available.</p>\r\n                        )}\r\n                    </ul>\r\n\r\n                    <h3>Marksheet</h3>\r\n                    <ul>\r\n                        {data.marksheets && data.marksheets.length > 0 ? (\r\n                            data.marksheets.map((mark) => (\r\n                                <li key={`${mark.SRN}-${mark.G_id}`}>\r\n                                    SRN: {mark.SRN}, Total: {mark.Total}, Assessment: {mark.Assessment_Number}\r\n                                </li>\r\n                            ))\r\n                        ) : (\r\n                            <p>No marksheet data available.</p>\r\n                        )}\r\n                    </ul>\r\n\r\n                    <h3>Panels</h3>\r\n                    <ul>\r\n                        {data.panels && data.panels.length > 0 ? (\r\n                            data.panels.map((panel) => (\r\n                                <li key={panel.Panel_Id}>\r\n                                    Panel {panel.Panel_Id} - Guides: {panel.G_id1}, {panel.G_id2}, {panel.G_id3}\r\n                                </li>\r\n                            ))\r\n                        ) : (\r\n                            <p>No panel data available.</p>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            ) : (\r\n                <div>No data found for the provided SRN.</div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeacherView;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}